#include <iostream>
#include <string>
#include <vector>
#include <queue>
#include <ctime>
#include <sstream>
#include <regex>

class Pengguna{
public:
string nama;
string kataSandi;
string lokasiPesan;
Pengguna(string nama, string kataSandi, stringlokasiPesan =""){
this -> nama = nama;
this -> kataSandi = kataSandi;
this -> lokasiPesan = lokasiPesan;
}
};

class LahanParkir {
public:
   string lokasi;
   bool tersedia;
   double harga;
   queue<pengguna> antrianPengguna;
   LahanParkir(string lokasi, bool tersedia, double harga) {
       this->lokasi = lokasi;
       this->tersedia = tersedia;
       this->harga = harga;
   }
};

class Pemesanan {
public:
      Pengguna pengguna;
      LahanParkir lahanparkir;
      string strukParkir;
      Pemesanan(Pengguna pengguna, LahanParkir lahanparkir) : pengguna (pengguna), lahanParkir(lahanParkir) {
      this->strukParkir = generateStrukParkir();
}
string generateStrukParkir() {
      time_t now = time(0);
      tm *1tm = localtime(&now);
      stringstream ss;
      ss << "Struk Parkir: " << pengguna.nama << " - " << lahanParkir.lokasi << " - " << 1900 + 1tm ->tm_mon << "-" << 1tm ->tm_mday << " " << 1tm-><<tm_hour << ":" << 1tm->tm_min << ":" <<1tm->tm_sec << "\nHarga: " << lahanParkir.harga << " IDR";
      return ss.str();
   }
};

bool validasiKataSandi(const string& kataSandi) {
    if (kataSandi.length() < 8) return false;
    if (!regex_search(kataSandi, regex("[A-Z]"))) return false;
    if (!regex_search(kataSandi, regex("[0-9]"))) return false;
    if (!regex_search(kataSandi, regex("[^a-zA-Z0-9]"))) return false;
    return true;
}


